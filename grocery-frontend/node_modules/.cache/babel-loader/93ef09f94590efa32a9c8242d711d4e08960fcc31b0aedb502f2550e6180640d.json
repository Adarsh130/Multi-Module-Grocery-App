{"ast":null,"code":"var _jsxFileName = \"D:\\\\Adarsh\\\\grocery-app\\\\grocery-app\\\\grocery-frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport authService from '../services/authService';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  loading: true,\n  error: null\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  SET_LOADING: 'SET_LOADING',\n  CLEAR_ERROR: 'CLEAR_ERROR'\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check if user is already logged in on app start\n  useEffect(() => {\n    const checkAuth = () => {\n      try {\n        const isAuthenticated = authService.isAuthenticated();\n        const user = authService.getUser();\n        if (isAuthenticated && user) {\n          dispatch({\n            type: AUTH_ACTIONS.LOGIN_SUCCESS,\n            payload: user\n          });\n        } else {\n          dispatch({\n            type: AUTH_ACTIONS.SET_LOADING,\n            payload: false\n          });\n        }\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        dispatch({\n          type: AUTH_ACTIONS.SET_LOADING,\n          payload: false\n        });\n      }\n    };\n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = async credentials => {\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_START\n    });\n    try {\n      const response = await authService.login(credentials);\n      const user = authService.getUser();\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: user\n      });\n      return response;\n    } catch (error) {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: error.message || 'Login failed'\n      });\n      throw error;\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_START\n    });\n    try {\n      const response = await authService.register(userData);\n      return response;\n    } catch (error) {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: error.message || 'Registration failed'\n      });\n      throw error;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    authService.logout();\n    dispatch({\n      type: AUTH_ACTIONS.LOGOUT\n    });\n  };\n\n  // Clear error function\n  const clearError = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Check if user has specific role\n  const hasRole = role => {\n    return authService.hasRole(role);\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return authService.isAdmin();\n  };\n\n  // Check if user is manager\n  const isManager = () => {\n    return authService.isManager();\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    clearError,\n    hasRole,\n    isAdmin,\n    isManager\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","jsxDEV","_jsxDEV","initialState","user","isAuthenticated","loading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","SET_LOADING","CLEAR_ERROR","authReducer","state","action","type","payload","AuthContext","AuthProvider","children","_s","dispatch","checkAuth","getUser","console","login","credentials","response","message","register","userData","logout","clearError","hasRole","role","isAdmin","isManager","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/Adarsh/grocery-app/grocery-app/grocery-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport authService from '../services/authService';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  user: null,\r\n  isAuthenticated: false,\r\n  loading: true,\r\n  error: null\r\n};\r\n\r\n// Action types\r\nconst AUTH_ACTIONS = {\r\n  LOGIN_START: 'LOGIN_START',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n  LOGOUT: 'LOGOUT',\r\n  SET_LOADING: 'SET_LOADING',\r\n  CLEAR_ERROR: 'CLEAR_ERROR'\r\n};\r\n\r\n// Reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ACTIONS.LOGIN_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    \r\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    \r\n    case AUTH_ACTIONS.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    \r\n    case AUTH_ACTIONS.LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    \r\n    case AUTH_ACTIONS.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n    \r\n    case AUTH_ACTIONS.CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nconst AuthContext = createContext();\r\n\r\n// Provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Check if user is already logged in on app start\r\n  useEffect(() => {\r\n    const checkAuth = () => {\r\n      try {\r\n        const isAuthenticated = authService.isAuthenticated();\r\n        const user = authService.getUser();\r\n        \r\n        if (isAuthenticated && user) {\r\n          dispatch({\r\n            type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n            payload: user\r\n          });\r\n        } else {\r\n          dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth check failed:', error);\r\n        dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (credentials) => {\r\n    dispatch({ type: AUTH_ACTIONS.LOGIN_START });\r\n    \r\n    try {\r\n      const response = await authService.login(credentials);\r\n      const user = authService.getUser();\r\n      \r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n        payload: user\r\n      });\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\r\n        payload: error.message || 'Login failed'\r\n      });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    dispatch({ type: AUTH_ACTIONS.LOGIN_START });\r\n    \r\n    try {\r\n      const response = await authService.register(userData);\r\n      return response;\r\n    } catch (error) {\r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\r\n        payload: error.message || 'Registration failed'\r\n      });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    authService.logout();\r\n    dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n  };\r\n\r\n  // Clear error function\r\n  const clearError = () => {\r\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n  };\r\n\r\n  // Check if user has specific role\r\n  const hasRole = (role) => {\r\n    return authService.hasRole(role);\r\n  };\r\n\r\n  // Check if user is admin\r\n  const isAdmin = () => {\r\n    return authService.isAdmin();\r\n  };\r\n\r\n  // Check if user is manager\r\n  const isManager = () => {\r\n    return authService.isManager();\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    clearError,\r\n    hasRole,\r\n    isAdmin,\r\n    isManager\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}