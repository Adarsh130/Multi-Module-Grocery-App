{"ast":null,"code":"import api from './api';\nexport const orderService = {\n  // Create new order\n  createOrder: async orderData => {\n    try {\n      const response = await api.post('/orders', orderData);\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message;\n    }\n  },\n  // Get user orders\n  getUserOrders: async customerId => {\n    try {\n      const response = await api.get(`/orders/customer/${customerId}`);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message;\n    }\n  },\n  // Get order by ID\n  getOrderById: async orderId => {\n    try {\n      const response = await api.get(`/orders/${orderId}`);\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message;\n    }\n  },\n  // Update order status\n  updateOrderStatus: async (orderId, status) => {\n    try {\n      const response = await api.put(`/orders/${orderId}/status`, {\n        status\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message;\n    }\n  },\n  // Cancel order\n  cancelOrder: async orderId => {\n    try {\n      const response = await api.put(`/orders/${orderId}/cancel`);\n      return response.data;\n    } catch (error) {\n      var _error$response5;\n      throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message;\n    }\n  },\n  // Get all orders (admin)\n  getAllOrders: async (filters = {}) => {\n    try {\n      const params = new URLSearchParams();\n      if (filters.status) params.append('status', filters.status);\n      if (filters.customerId) params.append('customerId', filters.customerId);\n      if (filters.startDate) params.append('startDate', filters.startDate);\n      if (filters.endDate) params.append('endDate', filters.endDate);\n      const response = await api.get(`/orders?${params.toString()}`);\n      return response.data;\n    } catch (error) {\n      var _error$response6;\n      throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message;\n    }\n  },\n  // Get order statistics (admin)\n  getOrderStatistics: async () => {\n    try {\n      const response = await api.get('/orders/statistics');\n      return response.data;\n    } catch (error) {\n      var _error$response7;\n      throw ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message;\n    }\n  },\n  // Process payment\n  processPayment: async paymentData => {\n    try {\n      const response = await api.post('/orders/payment', paymentData);\n      return response.data;\n    } catch (error) {\n      var _error$response8;\n      throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message;\n    }\n  },\n  // Track order\n  trackOrder: async orderId => {\n    try {\n      const response = await api.get(`/orders/${orderId}/tracking`);\n      return response.data;\n    } catch (error) {\n      var _error$response9;\n      throw ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message;\n    }\n  }\n};\nexport default orderService;","map":{"version":3,"names":["api","orderService","createOrder","orderData","response","post","data","error","_error$response","message","getUserOrders","customerId","get","_error$response2","getOrderById","orderId","_error$response3","updateOrderStatus","status","put","_error$response4","cancelOrder","_error$response5","getAllOrders","filters","params","URLSearchParams","append","startDate","endDate","toString","_error$response6","getOrderStatistics","_error$response7","processPayment","paymentData","_error$response8","trackOrder","_error$response9"],"sources":["D:/Adarsh/grocery-app/grocery-app/grocery-frontend/src/services/orderService.js"],"sourcesContent":["import api from './api';\n\nexport const orderService = {\n  // Create new order\n  createOrder: async (orderData) => {\n    try {\n      const response = await api.post('/orders', orderData);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Get user orders\n  getUserOrders: async (customerId) => {\n    try {\n      const response = await api.get(`/orders/customer/${customerId}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Get order by ID\n  getOrderById: async (orderId) => {\n    try {\n      const response = await api.get(`/orders/${orderId}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Update order status\n  updateOrderStatus: async (orderId, status) => {\n    try {\n      const response = await api.put(`/orders/${orderId}/status`, { status });\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Cancel order\n  cancelOrder: async (orderId) => {\n    try {\n      const response = await api.put(`/orders/${orderId}/cancel`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Get all orders (admin)\n  getAllOrders: async (filters = {}) => {\n    try {\n      const params = new URLSearchParams();\n      if (filters.status) params.append('status', filters.status);\n      if (filters.customerId) params.append('customerId', filters.customerId);\n      if (filters.startDate) params.append('startDate', filters.startDate);\n      if (filters.endDate) params.append('endDate', filters.endDate);\n      \n      const response = await api.get(`/orders?${params.toString()}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Get order statistics (admin)\n  getOrderStatistics: async () => {\n    try {\n      const response = await api.get('/orders/statistics');\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Process payment\n  processPayment: async (paymentData) => {\n    try {\n      const response = await api.post('/orders/payment', paymentData);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Track order\n  trackOrder: async (orderId) => {\n    try {\n      const response = await api.get(`/orders/${orderId}/tracking`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  }\n};\n\nexport default orderService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}