{"ast":null,"code":"import api from './api';\nexport const cartService = {\n  // Get cart for customer\n  getCart: async customerId => {\n    try {\n      const response = await api.get(`/cart/${customerId}`);\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message;\n    }\n  },\n  // Add item to cart\n  addToCart: async (customerId, item) => {\n    try {\n      const response = await api.post(`/cart/${customerId}/items`, item);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message;\n    }\n  },\n  // Update item quantity in cart\n  updateCartItem: async (customerId, productId, quantity) => {\n    try {\n      const response = await api.put(`/cart/${customerId}/items/${productId}?quantity=${quantity}`);\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message;\n    }\n  },\n  // Remove item from cart\n  removeFromCart: async (customerId, productId) => {\n    try {\n      const response = await api.delete(`/cart/${customerId}/items/${productId}`);\n      return response.data;\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message;\n    }\n  },\n  // Clear entire cart\n  clearCart: async customerId => {\n    try {\n      const response = await api.delete(`/cart/${customerId}`);\n      return response.data;\n    } catch (error) {\n      var _error$response5;\n      throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message;\n    }\n  },\n  // Calculate cart totals\n  calculateCartTotals: cartItems => {\n    if (!cartItems || cartItems.length === 0) {\n      return {\n        totalItems: 0,\n        totalAmount: 0,\n        itemCount: 0\n      };\n    }\n    const totalItems = cartItems.reduce((sum, item) => sum + item.quantity, 0);\n    const totalAmount = cartItems.reduce((sum, item) => sum + parseFloat(item.price) * item.quantity, 0);\n    return {\n      totalItems,\n      totalAmount: parseFloat(totalAmount.toFixed(2)),\n      itemCount: cartItems.length\n    };\n  },\n  // Local cart management (for non-authenticated users)\n  getLocalCart: () => {\n    const cart = localStorage.getItem('localCart');\n    return cart ? JSON.parse(cart) : [];\n  },\n  setLocalCart: cartItems => {\n    localStorage.setItem('localCart', JSON.stringify(cartItems));\n  },\n  addToLocalCart: (product, quantity = 1) => {\n    const cart = cartService.getLocalCart();\n    const existingItem = cart.find(item => item.productId === product.id);\n    if (existingItem) {\n      existingItem.quantity += quantity;\n    } else {\n      cart.push({\n        productId: product.id,\n        productName: product.name,\n        price: product.price,\n        quantity: quantity,\n        category: product.category\n      });\n    }\n    cartService.setLocalCart(cart);\n    return cart;\n  },\n  updateLocalCartItem: (productId, quantity) => {\n    const cart = cartService.getLocalCart();\n    const itemIndex = cart.findIndex(item => item.productId === productId);\n    if (itemIndex !== -1) {\n      if (quantity <= 0) {\n        cart.splice(itemIndex, 1);\n      } else {\n        cart[itemIndex].quantity = quantity;\n      }\n    }\n    cartService.setLocalCart(cart);\n    return cart;\n  },\n  removeFromLocalCart: productId => {\n    const cart = cartService.getLocalCart();\n    const filteredCart = cart.filter(item => item.productId !== productId);\n    cartService.setLocalCart(filteredCart);\n    return filteredCart;\n  },\n  clearLocalCart: () => {\n    localStorage.removeItem('localCart');\n    return [];\n  }\n};\nexport default cartService;","map":{"version":3,"names":["api","cartService","getCart","customerId","response","get","data","error","_error$response","message","addToCart","item","post","_error$response2","updateCartItem","productId","quantity","put","_error$response3","removeFromCart","delete","_error$response4","clearCart","_error$response5","calculateCartTotals","cartItems","length","totalItems","totalAmount","itemCount","reduce","sum","parseFloat","price","toFixed","getLocalCart","cart","localStorage","getItem","JSON","parse","setLocalCart","setItem","stringify","addToLocalCart","product","existingItem","find","id","push","productName","name","category","updateLocalCartItem","itemIndex","findIndex","splice","removeFromLocalCart","filteredCart","filter","clearLocalCart","removeItem"],"sources":["D:/Adarsh/grocery-app/grocery-app/grocery-frontend/src/services/cartService.js"],"sourcesContent":["import api from './api';\n\nexport const cartService = {\n  // Get cart for customer\n  getCart: async (customerId) => {\n    try {\n      const response = await api.get(`/cart/${customerId}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Add item to cart\n  addToCart: async (customerId, item) => {\n    try {\n      const response = await api.post(`/cart/${customerId}/items`, item);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Update item quantity in cart\n  updateCartItem: async (customerId, productId, quantity) => {\n    try {\n      const response = await api.put(\n        `/cart/${customerId}/items/${productId}?quantity=${quantity}`\n      );\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Remove item from cart\n  removeFromCart: async (customerId, productId) => {\n    try {\n      const response = await api.delete(`/cart/${customerId}/items/${productId}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Clear entire cart\n  clearCart: async (customerId) => {\n    try {\n      const response = await api.delete(`/cart/${customerId}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Calculate cart totals\n  calculateCartTotals: (cartItems) => {\n    if (!cartItems || cartItems.length === 0) {\n      return {\n        totalItems: 0,\n        totalAmount: 0,\n        itemCount: 0\n      };\n    }\n\n    const totalItems = cartItems.reduce((sum, item) => sum + item.quantity, 0);\n    const totalAmount = cartItems.reduce(\n      (sum, item) => sum + (parseFloat(item.price) * item.quantity), \n      0\n    );\n\n    return {\n      totalItems,\n      totalAmount: parseFloat(totalAmount.toFixed(2)),\n      itemCount: cartItems.length\n    };\n  },\n\n  // Local cart management (for non-authenticated users)\n  getLocalCart: () => {\n    const cart = localStorage.getItem('localCart');\n    return cart ? JSON.parse(cart) : [];\n  },\n\n  setLocalCart: (cartItems) => {\n    localStorage.setItem('localCart', JSON.stringify(cartItems));\n  },\n\n  addToLocalCart: (product, quantity = 1) => {\n    const cart = cartService.getLocalCart();\n    const existingItem = cart.find(item => item.productId === product.id);\n\n    if (existingItem) {\n      existingItem.quantity += quantity;\n    } else {\n      cart.push({\n        productId: product.id,\n        productName: product.name,\n        price: product.price,\n        quantity: quantity,\n        category: product.category\n      });\n    }\n\n    cartService.setLocalCart(cart);\n    return cart;\n  },\n\n  updateLocalCartItem: (productId, quantity) => {\n    const cart = cartService.getLocalCart();\n    const itemIndex = cart.findIndex(item => item.productId === productId);\n\n    if (itemIndex !== -1) {\n      if (quantity <= 0) {\n        cart.splice(itemIndex, 1);\n      } else {\n        cart[itemIndex].quantity = quantity;\n      }\n    }\n\n    cartService.setLocalCart(cart);\n    return cart;\n  },\n\n  removeFromLocalCart: (productId) => {\n    const cart = cartService.getLocalCart();\n    const filteredCart = cart.filter(item => item.productId !== productId);\n    cartService.setLocalCart(filteredCart);\n    return filteredCart;\n  },\n\n  clearLocalCart: () => {\n    localStorage.removeItem('localCart');\n    return [];\n  }\n};\n\nexport default cartService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}