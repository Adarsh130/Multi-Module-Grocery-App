{"ast":null,"code":"import api from './api';\nexport const productService = {\n  // Get all products\n  getAllProducts: async () => {\n    try {\n      const response = await api.get('/products');\n      return response;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message;\n    }\n  },\n  // Get featured products\n  getFeaturedProducts: async () => {\n    try {\n      const response = await api.get('/products/featured');\n      return response;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message;\n    }\n  },\n  // Get categories\n  getCategories: async () => {\n    try {\n      const response = await api.get('/products/categories');\n      return response;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message;\n    }\n  },\n  // Get product by ID\n  getProductById: async id => {\n    try {\n      const response = await api.get(`/products/${id}`);\n      return response;\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message;\n    }\n  },\n  // Get products by category\n  getProductsByCategory: async category => {\n    try {\n      const response = await api.get(`/products/category/${category}`);\n      return response;\n    } catch (error) {\n      var _error$response5;\n      throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message;\n    }\n  },\n  // Admin product management\n  createProduct: async productData => {\n    try {\n      const response = await api.post('/products', productData);\n      return response.data;\n    } catch (error) {\n      var _error$response6;\n      throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message;\n    }\n  },\n  updateProduct: async (productId, productData) => {\n    try {\n      const response = await api.put(`/products/${productId}`, productData);\n      return response.data;\n    } catch (error) {\n      var _error$response7;\n      throw ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message;\n    }\n  },\n  deleteProduct: async productId => {\n    try {\n      const response = await api.delete(`/products/${productId}`);\n      return response.data;\n    } catch (error) {\n      var _error$response8;\n      throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message;\n    }\n  },\n  // Search products\n  searchProducts: async (query, filters = {}) => {\n    try {\n      const params = new URLSearchParams();\n      if (query) params.append('search', query);\n      if (filters.category) params.append('category', filters.category);\n      if (filters.minPrice) params.append('minPrice', filters.minPrice);\n      if (filters.maxPrice) params.append('maxPrice', filters.maxPrice);\n      if (filters.inStock) params.append('inStock', filters.inStock);\n      if (filters.sortBy) params.append('sortBy', filters.sortBy);\n      if (filters.sortOrder) params.append('sortOrder', filters.sortOrder);\n      const response = await api.get(`/products/search?${params.toString()}`);\n      return response.data;\n    } catch (error) {\n      var _error$response9;\n      throw ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message;\n    }\n  },\n  // Get product reviews\n  getProductReviews: async productId => {\n    try {\n      const response = await api.get(`/products/${productId}/reviews`);\n      return response.data;\n    } catch (error) {\n      var _error$response0;\n      throw ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data) || error.message;\n    }\n  },\n  // Add product review\n  addProductReview: async (productId, reviewData) => {\n    try {\n      const response = await api.post(`/products/${productId}/reviews`, reviewData);\n      return response.data;\n    } catch (error) {\n      var _error$response1;\n      throw ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : _error$response1.data) || error.message;\n    }\n  },\n  // Client-side utility functions\n  filterByCategory: (products, category) => {\n    if (!category || category === 'All') return products;\n    return products.filter(product => product.category === category);\n  },\n  getCategoriesFromProducts: products => {\n    const categories = [...new Set(products.map(product => product.category))];\n    return ['All', ...categories.sort()];\n  },\n  sortProducts: (products, sortBy) => {\n    const sorted = [...products];\n    switch (sortBy) {\n      case 'name':\n        return sorted.sort((a, b) => a.name.localeCompare(b.name));\n      case 'price-low':\n        return sorted.sort((a, b) => parseFloat(a.price) - parseFloat(b.price));\n      case 'price-high':\n        return sorted.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));\n      case 'category':\n        return sorted.sort((a, b) => a.category.localeCompare(b.category));\n      default:\n        return sorted;\n    }\n  }\n};\nexport default productService;","map":{"version":3,"names":["api","productService","getAllProducts","response","get","error","_error$response","data","message","getFeaturedProducts","_error$response2","getCategories","_error$response3","getProductById","id","_error$response4","getProductsByCategory","category","_error$response5","createProduct","productData","post","_error$response6","updateProduct","productId","put","_error$response7","deleteProduct","delete","_error$response8","searchProducts","query","filters","params","URLSearchParams","append","minPrice","maxPrice","inStock","sortBy","sortOrder","toString","_error$response9","getProductReviews","_error$response0","addProductReview","reviewData","_error$response1","filterByCategory","products","filter","product","getCategoriesFromProducts","categories","Set","map","sort","sortProducts","sorted","a","b","name","localeCompare","parseFloat","price"],"sources":["D:/Adarsh/grocery-app/grocery-app/grocery-frontend/src/services/productService.js"],"sourcesContent":["import api from './api';\n\nexport const productService = {\n  // Get all products\n  getAllProducts: async () => {\n    try {\n      const response = await api.get('/products');\n      return response;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Get featured products\n  getFeaturedProducts: async () => {\n    try {\n      const response = await api.get('/products/featured');\n      return response;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Get categories\n  getCategories: async () => {\n    try {\n      const response = await api.get('/products/categories');\n      return response;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Get product by ID\n  getProductById: async (id) => {\n    try {\n      const response = await api.get(`/products/${id}`);\n      return response;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Get products by category\n  getProductsByCategory: async (category) => {\n    try {\n      const response = await api.get(`/products/category/${category}`);\n      return response;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Admin product management\n  createProduct: async (productData) => {\n    try {\n      const response = await api.post('/products', productData);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  updateProduct: async (productId, productData) => {\n    try {\n      const response = await api.put(`/products/${productId}`, productData);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  deleteProduct: async (productId) => {\n    try {\n      const response = await api.delete(`/products/${productId}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Search products\n  searchProducts: async (query, filters = {}) => {\n    try {\n      const params = new URLSearchParams();\n      if (query) params.append('search', query);\n      if (filters.category) params.append('category', filters.category);\n      if (filters.minPrice) params.append('minPrice', filters.minPrice);\n      if (filters.maxPrice) params.append('maxPrice', filters.maxPrice);\n      if (filters.inStock) params.append('inStock', filters.inStock);\n      if (filters.sortBy) params.append('sortBy', filters.sortBy);\n      if (filters.sortOrder) params.append('sortOrder', filters.sortOrder);\n      \n      const response = await api.get(`/products/search?${params.toString()}`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Get product reviews\n  getProductReviews: async (productId) => {\n    try {\n      const response = await api.get(`/products/${productId}/reviews`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Add product review\n  addProductReview: async (productId, reviewData) => {\n    try {\n      const response = await api.post(`/products/${productId}/reviews`, reviewData);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Client-side utility functions\n  filterByCategory: (products, category) => {\n    if (!category || category === 'All') return products;\n    return products.filter(product => product.category === category);\n  },\n\n  getCategoriesFromProducts: (products) => {\n    const categories = [...new Set(products.map(product => product.category))];\n    return ['All', ...categories.sort()];\n  },\n\n  sortProducts: (products, sortBy) => {\n    const sorted = [...products];\n    \n    switch (sortBy) {\n      case 'name':\n        return sorted.sort((a, b) => a.name.localeCompare(b.name));\n      case 'price-low':\n        return sorted.sort((a, b) => parseFloat(a.price) - parseFloat(b.price));\n      case 'price-high':\n        return sorted.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));\n      case 'category':\n        return sorted.sort((a, b) => a.category.localeCompare(b.category));\n      default:\n        return sorted;\n    }\n  }\n};\n\nexport default productService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}