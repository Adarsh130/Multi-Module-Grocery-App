{"ast":null,"code":"import api from './api';\nexport const productService = {\n  // Get all products\n  getAllProducts: async () => {\n    try {\n      const response = await api.get('/products');\n      return response;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message;\n    }\n  },\n  // Get featured products\n  getFeaturedProducts: async () => {\n    try {\n      const response = await api.get('/products/featured');\n      return response;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message;\n    }\n  },\n  // Get categories\n  getCategories: async () => {\n    try {\n      const response = await api.get('/products/categories');\n      return response;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message;\n    }\n  },\n  // Get product by ID\n  getProductById: async id => {\n    try {\n      const response = await api.get(`/products/${id}`);\n      return response;\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message;\n    }\n  },\n  // Get products by category\n  getProductsByCategory: async category => {\n    try {\n      const response = await api.get(`/products/category/${category}`);\n      return response;\n    } catch (error) {\n      var _error$response5;\n      throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message;\n    }\n  },\n  // Create new product (Admin/Manager only)\n  createProduct: async productData => {\n    try {\n      const response = await api.post('/products', productData);\n      return response;\n    } catch (error) {\n      var _error$response6;\n      throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message;\n    }\n  },\n  // Update product (Admin/Manager only)\n  updateProduct: async (id, productData) => {\n    try {\n      const response = await api.put(`/products/${id}`, productData);\n      return response;\n    } catch (error) {\n      var _error$response7;\n      throw ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message;\n    }\n  },\n  // Delete product (Admin only)\n  deleteProduct: async id => {\n    try {\n      const response = await api.delete(`/products/${id}`);\n      return response;\n    } catch (error) {\n      var _error$response8;\n      throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message;\n    }\n  },\n  // Search products\n  searchProducts: (products, searchTerm) => {\n    if (!searchTerm) return products;\n    const term = searchTerm.toLowerCase();\n    return products.filter(product => product.name.toLowerCase().includes(term) || product.category.toLowerCase().includes(term));\n  },\n  // Filter products by category\n  filterByCategory: (products, category) => {\n    if (!category || category === 'All') return products;\n    return products.filter(product => product.category === category);\n  },\n  // Get unique categories from products\n  getCategoriesFromProducts: products => {\n    const categories = [...new Set(products.map(product => product.category))];\n    return ['All', ...categories.sort()];\n  },\n  // Sort products\n  sortProducts: (products, sortBy) => {\n    const sorted = [...products];\n    switch (sortBy) {\n      case 'name':\n        return sorted.sort((a, b) => a.name.localeCompare(b.name));\n      case 'price-low':\n        return sorted.sort((a, b) => parseFloat(a.price) - parseFloat(b.price));\n      case 'price-high':\n        return sorted.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));\n      case 'category':\n        return sorted.sort((a, b) => a.category.localeCompare(b.category));\n      default:\n        return sorted;\n    }\n  }\n};\nexport default productService;","map":{"version":3,"names":["api","productService","getAllProducts","response","get","error","_error$response","data","message","getFeaturedProducts","_error$response2","getCategories","_error$response3","getProductById","id","_error$response4","getProductsByCategory","category","_error$response5","createProduct","productData","post","_error$response6","updateProduct","put","_error$response7","deleteProduct","delete","_error$response8","searchProducts","products","searchTerm","term","toLowerCase","filter","product","name","includes","filterByCategory","getCategoriesFromProducts","categories","Set","map","sort","sortProducts","sortBy","sorted","a","b","localeCompare","parseFloat","price"],"sources":["D:/Adarsh/grocery-app/grocery-app/grocery-frontend/src/services/productService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const productService = {\r\n  // Get all products\r\n  getAllProducts: async () => {\r\n    try {\r\n      const response = await api.get('/products');\r\n      return response;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Get featured products\r\n  getFeaturedProducts: async () => {\r\n    try {\r\n      const response = await api.get('/products/featured');\r\n      return response;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Get categories\r\n  getCategories: async () => {\r\n    try {\r\n      const response = await api.get('/products/categories');\r\n      return response;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Get product by ID\r\n  getProductById: async (id) => {\r\n    try {\r\n      const response = await api.get(`/products/${id}`);\r\n      return response;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Get products by category\r\n  getProductsByCategory: async (category) => {\r\n    try {\r\n      const response = await api.get(`/products/category/${category}`);\r\n      return response;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Create new product (Admin/Manager only)\r\n  createProduct: async (productData) => {\r\n    try {\r\n      const response = await api.post('/products', productData);\r\n      return response;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Update product (Admin/Manager only)\r\n  updateProduct: async (id, productData) => {\r\n    try {\r\n      const response = await api.put(`/products/${id}`, productData);\r\n      return response;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Delete product (Admin only)\r\n  deleteProduct: async (id) => {\r\n    try {\r\n      const response = await api.delete(`/products/${id}`);\r\n      return response;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Search products\r\n  searchProducts: (products, searchTerm) => {\r\n    if (!searchTerm) return products;\r\n    \r\n    const term = searchTerm.toLowerCase();\r\n    return products.filter(product =>\r\n      product.name.toLowerCase().includes(term) ||\r\n      product.category.toLowerCase().includes(term)\r\n    );\r\n  },\r\n\r\n  // Filter products by category\r\n  filterByCategory: (products, category) => {\r\n    if (!category || category === 'All') return products;\r\n    return products.filter(product => product.category === category);\r\n  },\r\n\r\n  // Get unique categories from products\r\n  getCategoriesFromProducts: (products) => {\r\n    const categories = [...new Set(products.map(product => product.category))];\r\n    return ['All', ...categories.sort()];\r\n  },\r\n\r\n  // Sort products\r\n  sortProducts: (products, sortBy) => {\r\n    const sorted = [...products];\r\n    \r\n    switch (sortBy) {\r\n      case 'name':\r\n        return sorted.sort((a, b) => a.name.localeCompare(b.name));\r\n      case 'price-low':\r\n        return sorted.sort((a, b) => parseFloat(a.price) - parseFloat(b.price));\r\n      case 'price-high':\r\n        return sorted.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));\r\n      case 'category':\r\n        return sorted.sort((a, b) => a.category.localeCompare(b.category));\r\n      default:\r\n        return sorted;\r\n    }\r\n  }\r\n};\r\n\r\nexport default productService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}