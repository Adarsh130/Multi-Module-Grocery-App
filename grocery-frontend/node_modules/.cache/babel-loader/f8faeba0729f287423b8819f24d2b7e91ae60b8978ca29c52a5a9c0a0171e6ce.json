{"ast":null,"code":"import api from './api';\nexport const authService = {\n  // Login user\n  login: async credentials => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      const {\n        data\n      } = response.data;\n      if (data.token) {\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify({\n          username: data.username,\n          email: data.email,\n          fullName: data.fullName,\n          roles: data.roles\n        }));\n      }\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message;\n    }\n  },\n  // Register user\n  register: async userData => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message;\n    }\n  },\n  // Get current user info\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/auth/me');\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message;\n    }\n  },\n  // Logout user\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n  // Check if user is authenticated\n  isAuthenticated: () => {\n    return !!localStorage.getItem('token');\n  },\n  // Get stored user data\n  getUser: () => {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  },\n  // Check if user has specific role\n  hasRole: role => {\n    var _user$roles;\n    const user = authService.getUser();\n    return (user === null || user === void 0 ? void 0 : (_user$roles = user.roles) === null || _user$roles === void 0 ? void 0 : _user$roles.includes(role)) || false;\n  },\n  // Check if user is admin\n  isAdmin: () => {\n    return authService.hasRole('ADMIN');\n  },\n  // Check if user is manager\n  isManager: () => {\n    return authService.hasRole('MANAGER') || authService.hasRole('ADMIN');\n  }\n};\nexport default authService;","map":{"version":3,"names":["api","authService","login","credentials","response","post","data","token","localStorage","setItem","JSON","stringify","username","email","fullName","roles","error","_error$response","message","register","userData","_error$response2","getCurrentUser","get","_error$response3","logout","removeItem","isAuthenticated","getItem","getUser","user","parse","hasRole","role","_user$roles","includes","isAdmin","isManager"],"sources":["D:/Adarsh/grocery-app/grocery-app/grocery-frontend/src/services/authService.js"],"sourcesContent":["import api from './api';\n\nexport const authService = {\n  // Login user\n  login: async (credentials) => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      const { data } = response.data;\n      \n      if (data.token) {\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify({\n          username: data.username,\n          email: data.email,\n          fullName: data.fullName,\n          roles: data.roles\n        }));\n      }\n      \n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Register user\n  register: async (userData) => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Get current user info\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/auth/me');\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  // Logout user\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n\n  // Check if user is authenticated\n  isAuthenticated: () => {\n    return !!localStorage.getItem('token');\n  },\n\n  // Get stored user data\n  getUser: () => {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  },\n\n  // Check if user has specific role\n  hasRole: (role) => {\n    const user = authService.getUser();\n    return user?.roles?.includes(role) || false;\n  },\n\n  // Check if user is admin\n  isAdmin: () => {\n    return authService.hasRole('ADMIN');\n  },\n\n  // Check if user is manager\n  isManager: () => {\n    return authService.hasRole('MANAGER') || authService.hasRole('ADMIN');\n  }\n};\n\nexport default authService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}